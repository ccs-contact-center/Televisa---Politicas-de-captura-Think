{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Desarrollo-Ccs\\\\Documents\\\\GitHub\\\\cursosNuevos\\\\Televisa - Politicas de captura Think\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { ADD_PROFILE } from '../Actions/types'; // const initialState = {\n//   placeName: '',\n//   places: []\n// };\n//##### ESTE BLOQUE CONCATENA LO QUE LE PASES EN EL ACTION Y NECESITA TENER DECLARADO LA CONSTANTE DE ARRIBA\n// const placeReducer = (state = initialState, action) => {\n//   switch(action.type) {\n//     case ADD_PLACE:\n//       return {\n//         ...state,\n//         places: state.places.concat({\n//           key: Math.random(),\n//           value: action.payload\n//         })\n//       };\n//     default:\n//       return state;\n//   }\n// }\n\nvar profileReducer = function profileReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_PROFILE:\n      {\n        return _objectSpread({}, state, {\n          profile: action.payload\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default profileReducer;","map":{"version":3,"sources":["C:/Users/Desarrollo-Ccs/Documents/GitHub/cursosNuevos/Televisa - Politicas de captura Think/src/redux/Reducers/profileReducer.js"],"names":["ADD_PROFILE","profileReducer","state","action","type","profile","payload"],"mappings":";AAAA,SAASA,WAAT,QAA4B,kBAA5B,C,CAEA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAyB;AAAA,MAAxBC,KAAwB,uEAAhB,EAAgB;AAAA,MAAXC,MAAW;;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,WAAL;AAAmB;AACf,iCACOE,KADP;AAEIG,UAAAA,OAAO,EAAEF,MAAM,CAACG;AAFpB;AAIH;;AACD;AAAS;AACH,eAAOJ,KAAP;AACL;AATL;AAWH,CAZD;;AAcA,eAAeD,cAAf","sourcesContent":["import { ADD_PROFILE } from '../Actions/types';\n\n// const initialState = {\n//   placeName: '',\n//   places: []\n// };\n\n\n//##### ESTE BLOQUE CONCATENA LO QUE LE PASES EN EL ACTION Y NECESITA TENER DECLARADO LA CONSTANTE DE ARRIBA\n\n// const placeReducer = (state = initialState, action) => {\n//   switch(action.type) {\n//     case ADD_PLACE:\n//       return {\n//         ...state,\n//         places: state.places.concat({\n//           key: Math.random(),\n//           value: action.payload\n//         })\n//       };\n//     default:\n//       return state;\n//   }\n// }\n\nconst profileReducer = (state = { }, action) => {\n    switch (action.type) {\n        case ADD_PROFILE : {\n            return {\n                ...state,\n                profile: action.payload\n            }\n        }\n        default: {\n              return state\n        }\n    }\n}\n\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}