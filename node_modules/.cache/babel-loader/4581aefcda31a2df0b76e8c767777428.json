{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Desarrollo-Ccs\\\\Documents\\\\GitHub\\\\cursosNuevos\\\\Televisa - Politicas de captura Think\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\Desarrollo-Ccs\\\\Documents\\\\GitHub\\\\cursosNuevos\\\\Televisa - Politicas de captura Think\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Desarrollo-Ccs\\\\Documents\\\\GitHub\\\\cursosNuevos\\\\Televisa - Politicas de captura Think\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport decode from \"jwt-decode\";\nvar hostURL = \"https://api.ccscontactcenter.com\"; //const hostURL = 'http://localhost:3020'\n\nvar AuthService = /*#__PURE__*/function () {\n  function AuthService(domain) {\n    _classCallCheck(this, AuthService);\n\n    this.fetch = this.fetch.bind(this);\n    this.login = this.login.bind(this);\n    this.getProfile = this.getProfile.bind(this);\n  }\n\n  _createClass(AuthService, [{\n    key: \"login\",\n    value: function login(username, password) {\n      var _this = this;\n\n      return this.fetch(hostURL + \"/v1/auth/login40\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          username: username,\n          password: password\n        })\n      }).then(function (res) {\n        _this.setToken(res.token);\n\n        return Promise.resolve(res);\n      });\n    }\n  }, {\n    key: \"loggedIn\",\n    value: function loggedIn() {\n      var token = this.getToken();\n      return !!token && !this.isTokenExpired(token);\n    }\n  }, {\n    key: \"isTokenExpired\",\n    value: function isTokenExpired(token) {\n      try {\n        var decoded = decode(token);\n\n        if (decoded.exp < Date.now() / 1000) {\n          return true;\n        } else return false;\n      } catch (err) {\n        return false;\n      }\n    }\n  }, {\n    key: \"setToken\",\n    value: function setToken(idToken) {\n      localStorage.setItem(\"id_token\", idToken);\n    }\n  }, {\n    key: \"getToken\",\n    value: function getToken() {\n      return localStorage.getItem(\"id_token\");\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      localStorage.removeItem(\"id_token\");\n    }\n  }, {\n    key: \"getProfile\",\n    value: function getProfile() {\n      return decode(this.getToken());\n    }\n  }, {\n    key: \"fetch\",\n    value: function (_fetch) {\n      function fetch(_x, _x2) {\n        return _fetch.apply(this, arguments);\n      }\n\n      fetch.toString = function () {\n        return _fetch.toString();\n      };\n\n      return fetch;\n    }(function (url, options) {\n      var headers = {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      };\n\n      if (this.loggedIn()) {\n        headers[\"Authorization\"] = \"Bearer \" + this.getToken();\n      }\n\n      return fetch(url, _objectSpread({\n        headers: headers\n      }, options)).then(this._checkStatus).then(function (response) {\n        return response.json();\n      });\n    })\n  }, {\n    key: \"_checkStatus\",\n    value: function _checkStatus(response) {\n      if (response.status >= 200 && response.status < 30000) {\n        return response;\n      } else {\n        var error = new Error(response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }\n  }]);\n\n  return AuthService;\n}();\n\nexport { AuthService as default };","map":{"version":3,"sources":["C:/Users/Desarrollo-Ccs/Documents/GitHub/cursosNuevos/Televisa - Politicas de captura Think/src/services/AuthService.js"],"names":["decode","hostURL","AuthService","domain","fetch","bind","login","getProfile","username","password","method","body","JSON","stringify","then","res","setToken","token","Promise","resolve","getToken","isTokenExpired","decoded","exp","Date","now","err","idToken","localStorage","setItem","getItem","removeItem","url","options","headers","Accept","loggedIn","_checkStatus","response","json","status","error","Error","statusText"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,YAAnB;AAEA,IAAMC,OAAO,GAAG,kCAAhB,C,CACA;;IAEqBC,W;AACnB,uBAAYC,MAAZ,EAAoB;AAAA;;AAClB,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWD,IAAX,CAAgB,IAAhB,CAAb;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB;AACD;;;;0BAEKG,Q,EAAUC,Q,EAAU;AAAA;;AACxB,aAAO,KAAKL,KAAL,CAAWH,OAAO,GAAG,kBAArB,EAAyC;AAC9CS,QAAAA,MAAM,EAAE,MADsC;AAE9CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBL,UAAAA,QAAQ,EAARA,QADmB;AAEnBC,UAAAA,QAAQ,EAARA;AAFmB,SAAf;AAFwC,OAAzC,EAMJK,IANI,CAMC,UAAAC,GAAG,EAAI;AACb,QAAA,KAAI,CAACC,QAAL,CAAcD,GAAG,CAACE,KAAlB;;AACA,eAAOC,OAAO,CAACC,OAAR,CAAgBJ,GAAhB,CAAP;AACD,OATM,CAAP;AAUD;;;+BAEU;AACT,UAAME,KAAK,GAAG,KAAKG,QAAL,EAAd;AACA,aAAO,CAAC,CAACH,KAAF,IAAW,CAAC,KAAKI,cAAL,CAAoBJ,KAApB,CAAnB;AACD;;;mCAEcA,K,EAAO;AACpB,UAAI;AACF,YAAMK,OAAO,GAAGtB,MAAM,CAACiB,KAAD,CAAtB;;AACA,YAAIK,OAAO,CAACC,GAAR,GAAcC,IAAI,CAACC,GAAL,KAAa,IAA/B,EAAqC;AACnC,iBAAO,IAAP;AACD,SAFD,MAEO,OAAO,KAAP;AACR,OALD,CAKE,OAAOC,GAAP,EAAY;AACZ,eAAO,KAAP;AACD;AACF;;;6BAEQC,O,EAAS;AAChBC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,OAAjC;AACD;;;+BAEU;AACT,aAAOC,YAAY,CAACE,OAAb,CAAqB,UAArB,CAAP;AACD;;;6BAEQ;AACPF,MAAAA,YAAY,CAACG,UAAb,CAAwB,UAAxB;AACD;;;iCAEY;AACX,aAAO/B,MAAM,CAAC,KAAKoB,QAAL,EAAD,CAAb;AACD;;;;;;;;;;;;;gBAEKY,G,EAAKC,O,EAAS;AAClB,UAAMC,OAAO,GAAG;AACdC,QAAAA,MAAM,EAAE,kBADM;AAEd,wBAAgB;AAFF,OAAhB;;AAKA,UAAI,KAAKC,QAAL,EAAJ,EAAqB;AACnBF,QAAAA,OAAO,CAAC,eAAD,CAAP,GAA2B,YAAY,KAAKd,QAAL,EAAvC;AACD;;AAED,aAAOhB,KAAK,CAAC4B,GAAD;AACVE,QAAAA,OAAO,EAAPA;AADU,SAEPD,OAFO,EAAL,CAIJnB,IAJI,CAIC,KAAKuB,YAJN,EAKJvB,IALI,CAKC,UAAAwB,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OALT,CAAP;AAMD,K;;;iCAEYD,Q,EAAU;AACrB,UAAIA,QAAQ,CAACE,MAAT,IAAmB,GAAnB,IAA0BF,QAAQ,CAACE,MAAT,GAAkB,KAAhD,EAAuD;AACrD,eAAOF,QAAP;AACD,OAFD,MAEO;AACL,YAAIG,KAAK,GAAG,IAAIC,KAAJ,CAAUJ,QAAQ,CAACK,UAAnB,CAAZ;AACAF,QAAAA,KAAK,CAACH,QAAN,GAAiBA,QAAjB;AACA,cAAMG,KAAN;AACD;AACF;;;;;;SA9EkBvC,W","sourcesContent":["import decode from \"jwt-decode\";\n\nconst hostURL = \"https://api.ccscontactcenter.com\";\n//const hostURL = 'http://localhost:3020'\n\nexport default class AuthService {\n  constructor(domain) {\n    this.fetch = this.fetch.bind(this);\n    this.login = this.login.bind(this);\n    this.getProfile = this.getProfile.bind(this);\n  }\n\n  login(username, password) {\n    return this.fetch(hostURL + \"/v1/auth/login40\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(res => {\n      this.setToken(res.token);\n      return Promise.resolve(res);\n    });\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  setToken(idToken) {\n    localStorage.setItem(\"id_token\", idToken);\n  }\n\n  getToken() {\n    return localStorage.getItem(\"id_token\");\n  }\n\n  logout() {\n    localStorage.removeItem(\"id_token\");\n  }\n\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  fetch(url, options) {\n    const headers = {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    };\n\n    if (this.loggedIn()) {\n      headers[\"Authorization\"] = \"Bearer \" + this.getToken();\n    }\n\n    return fetch(url, {\n      headers,\n      ...options\n    })\n      .then(this._checkStatus)\n      .then(response => response.json());\n  }\n\n  _checkStatus(response) {\n    if (response.status >= 200 && response.status < 30000) {\n      return response;\n    } else {\n      var error = new Error(response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}